from starkware.python.utils import from_bytes
from starkware.crypto.signature.signature import private_to_stark_key, get_random_private_key
import asyncio
from starknet_py.net import AccountClient, KeyPair
from starknet_py.net.gateway_client import GatewayClient
from starknet_py.contract import Contract
from starknet_py.net.udc_deployer.deployer import Deployer
from enum import Enum
from starknet_py.net.models import StarknetChainId
from starknet_py.net.signer.stark_curve_signer import StarkCurveSigner
from starknet_py.utils.docs import as_our_module
from pathlib import Path
import settings
import utils
import json

## ERC20
# WL_ADDRESSES = [1900385951641909016294557771160805230279974852683230073741824079343062515185, 1346467854455685460098999325011621961504244848751031854889451399430175951183, 1935063120963007651720444207357493815736729447667659013124670965324844680863, 2846417304015367565224703477906543256941037536794629011019627518135445046171]
# WL_ADDRESSES = [ 3525720601340402105263319811477063502170786397347199682530380828172317534921, 452909402100583258895521405608888795031283199816450101143491129692685037172]

WL_ADDRESSES = [
2404051525412854263861249727376062165279881580672213639055220710922383263725 
,1301108143038917080813415141243301358410884631265560236069923826467924482577
,2510588219485225372132209782209152884407953648760337364223786473598719147716
,1605126281526213312365730068526982448679605856173044615437557898822210311031
,147423340419018207421839669887138750956001455290044897046538100786353897758
,612915067195306509157583348258659096827525063358078025826750381945460659566
,1251735723833979221084270483738893755954286503855834611866768699552648264035
,3371045386944086261868475796714030082942267583817648265880832442043007218377
,1425477449026040492633023941184549565500481891185182874830452257363749966390
,3057519021947741235538505454252437804469302690477725683141658731752641349328
,1887233785552073083681025309335961910373813176650989358884062433854140138424
,3011786155342617544205935146910307008444355357307574451732172032660664216033
,482367485045007940795019379095271807050200532340671671675324665423399617534
,3125315487512731700086825831577599617732905270833713762144661962339151214093
,3377080101493418901771898388467501408592703296316003277450792096716359537643
,2987487139459416238325990354915206084649717466208566030921445943388043804241
,840268729073666799074955071925554425694687811177007306935287366831783504324
,1717978287987371205553012865184375056436737992379217292160826847202404466872
,3082855743104023748670752493322322280473727223274025327765654833483150311022
,2774650226403213207704212561529732051634306837834737019065872112476197218120
,1974178488326158091355696208111864086793783330275542083487748618661816117852
,1953105041189371503577415473886231651687412841437715155830771724259130888813
,1286752544749461594029458919216688621158658011889207563821053863943797725550
,253191981718199628305070489527729272668491674998469626268280524622549922024
,2551741483559659565050697469154164877275788844223515557839506927221784926380
,2866239431126297197442908116935904967543191892049816645523815323272561561493
,3505263923446687578630514718288332339023556948901950219168303458541598445092
,1521369910204976877509481457194236583280865425867589435898485410878207415531
,463374295181278682232029347884629203751386680013449738072080898344931388334
,1013751371752566203678204563966880275258406835307594317759007638005491035087
,1229875559830348763158509605082828346342669983217120132323759380866582975677
,1359024999808874423086084263125651947653752982326336277782601811450326500762
,3171886081432313713522530719715184744895886469881387232667609378321674558673
,1390392341734558430225188131325703542741105869039996209380120283117019311213
,2152106153543410236968502058964552126807070219524040055240309340564587999470
,221407129967213955832419500943006606765715054603231022065064108772233667454
,3079121799853361119411479653922130244900927417519303574453942003894935833984
,762501486134595217761835404375596863862094596304991552115867264504757842497
,2353280586707333753545054779522065517975596964839726274374951190199633865859
,3190491033190587924340338729498681256353600302492883503359147218655271541314
,1607994539068268593699919700618118076618151013147826734797591845856699065475
,1905535013558677332784215265561895978479124673966657166043727998197548192281
,3042046915234724029849265371994823834184246198948857922319091763029498948130
,1407384885388008679609869620497884008161389670378908420916194153357469442859
,1343218915732610317041983927804387720829309765477442372974300382445458979081
,2442732154986147533686890256037004252257232145562515825474459579602963785678
,3339719938960091164566429292961131534456666865626974560199403583643360109706 
,3520100204008787495574138594239433743460335720933175199211861580635452324586
,2820047285948758510829999219699367687176523067039566974582154548733615763278
,712266773334818285333509614333732203258570267712866353073603841885767541992
,850452295051740151532788227139730032174016844193333695240632467252081414313
,1203575271073469380544212534269238260899982621369637890311042282147915744619
,205437574745710510618473953730663592735191850775595278672065392273920555491
,2933212128750383065138765298315067937835342234568198328202327751972054144321
,2343180313440397988497796894638998889418127524984142930304876447147894674141
,1599874217700666080166702596097591872070845801815187940842519595710533351965
,2065377435272353753560965319667477777670749715671379846089428531886430828109
,2551741483559659565050697469154164877275788844223515557839506927221784926380
,2229387525619149561698580271959604841702923447800546796271565898791244874073
,2878775640526522894268054864132412594689510001745604472318007296918067459534
,475926449860617450009373385095204665054655311724475012145993235561192847446
,3470849220008583030797749701464483129855090408836964619925396929702149179114
,2645456374554177224891374802436799737266536808153477201104165679916161823042
,762501486134595217761835404375596863862094596304991552115867264504757842497
,1389732181477068287129746313629584208726313419560969362950945767785594878224
,577510577625069563284476920691570956458542037042875726565648877249493814978
,3103208378353607106729140569041717078115930598556485918872022655887817711422
]
class _StarknetChainId(Enum):
    MAINNET = from_bytes(b"SN_MAIN")
    TESTNET = from_bytes(b"SN_GOERLI")
    TESTNET_2 = from_bytes(b"SN_GOERLI2")


StarknetChainId = as_our_module(_StarknetChainId)


async def call():
    goerli2_client = GatewayClient(net=settings.NET)
    key_pair = KeyPair(private_key=int(settings.PRIVATE_KEY,16), public_key=int(settings.PUBLIC_KEY,16))
    signer = StarkCurveSigner(settings.ADMIN, key_pair, StarknetChainId.TESTNET_2)
    admin = AccountClient(
        client=goerli2_client,
        address=settings.ADMIN,
        key_pair=key_pair,
        signer=signer,
        chain=StarknetChainId.TESTNET_2,
        supported_tx_version=1,
    )    
    
    balance = await admin.get_balance(utils.ETH)
    print(f'üí∞ User balance: {balance/(10**18)} ETH')

    print(f'‚åõÔ∏è adding WL...')
    minter_contract = await Contract.from_address(client=admin, address=utils.DAI_MINTER)
    invocation = await minter_contract.functions["setWhitelist"].invoke(WL_ADDRESSES, max_fee=int(1e16))
    await invocation.wait_for_acceptance()
    print(f'‚úÖ Success! ')


loop = asyncio.get_event_loop()
loop.run_until_complete(call())